jobs:
- job: nGraph_ONNX_Lin

  # About 300% of total time
  timeoutInMinutes: 90

  pool:
    name: LIN_VMSS_VENV_ONNX_WU2

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    WORKERS_NUMBER: 8
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    WORK_DIR: $(Pipeline.Workspace)/_w
    MODELS_DIR: /mount/cinfsshare/onnxtestdata
    TMP_DIR: /mnt/tmp

  steps:
  - script: |
      curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2019-06-01"
      whoami
      uname -a
      echo Python3 info ; which python3 ; python3 --version
      echo Python info ; which python ; python --version
      echo Java info ; which java ; java -version
      echo gcc info ; which gcc ; gcc --version
      lsb_release
      env
      cat /proc/cpuinfo
      cat /proc/meminfo
      cat /etc/fstab
      vmstat -s
      df
      lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
      free -h
    displayName: 'System info'

  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      sudo rm -rf $(TMP_DIR) ; sudo mkdir $(TMP_DIR) ; sudo chmod 777 -R $(TMP_DIR)
      sudo mkdir -p $(MODELS_DIR)
      sudo apt --assume-yes install nfs-common
      sudo mount -vvv -t nfs cinfsshare.file.core.windows.net:/cinfsshare/onnxtestdata $(MODELS_DIR) -o vers=4,minorversion=1,sec=sys
    displayName: 'Make dirs'

  - checkout: self
    clean: true
    lfs: false
    submodules: recursive
    path: openvino

  - script: docker build --tag=openvino-onnx-ci-image --file=.ci/openvino-onnx/Dockerfile .
    displayName: 'Docker build'

  - script: ngraph/python/tests/test_onnx/model_zoo_preprocess.sh -d $(TMP_DIR) -o
    displayName: 'Get models'

  - script: |
      ##wget -O "$(TMP_DIR)/msft.zip" https://onnxruntimetestdata.blob.core.windows.net/models/20191107.zip
      ##unzip "$(TMP_DIR)/msft.zip" -d "$(MODELS_DIR)/msft"
      #unzip "/mnt/onnxtestdata/models/20191107.zip" -d "$(MODELS_DIR)/msft"
      #mv $(MODELS_DIR)/msft/opset9/LSTM_Seq_lens_unpacked/seq_lens_sorted $(MODELS_DIR)/msft/opset9/LSTM_Seq_lens_unpacked/test_data_set_0
      #mv $(MODELS_DIR)/msft/opset9/LSTM_Seq_lens_unpacked/seq_lens_unsorted $(MODELS_DIR)/msft/opset9/LSTM_Seq_lens_unpacked/test_data_set_1
    displayName: 'Get MSFT models'
    enabled: false

  - script: |
      ls -alR $(MODELS_DIR)
      ls -alR $(TMP_DIR)
    displayName: 'List models'
    enabled: false

  - script: sudo fallocate -l 48G /swapfile ; sudo mkswap /swapfile ; sudo swapon /swapfile ; df ; free -h
    displayName: 'Create swap'

  - script: |
      docker run --name openvino-onnx-ci-container --volume $(TMP_DIR)/model_zoo:/root/.onnx/model_zoo --volume $(MODELS_DIR)/msft:/root/.onnx/model_zoo/MSFT openvino-onnx-ci-image
    displayName: 'Docker run'

