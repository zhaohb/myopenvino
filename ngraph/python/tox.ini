[tox]
envlist = py3

[testenv]
skipdist=True
skip_install=True
deps =
  -rrequirements.txt
  -rrequirements_test.txt
  mypy
  flake8-bugbear
  pytest-xdist
setenv =
  NGRAPH_BACKEND = {env:NGRAPH_BACKEND:"CPU"}
  PYTHONPATH = {env:PYTHONPATH}
  ngraph_DIR = {env:NGRAPH_CPP_BUILD_PATH}
passenv =
  http_proxy
  https_proxy
commands=
  {envbindir}/python setup.py bdist_wheel
  {envbindir}/pip install --no-index --pre --find-links=dist/ ngraph-core
  flake8 {posargs:src/ setup.py}
  flake8 --ignore=D100,D101,D102,D103,D104,D105,D107,W503 tests/  # ignore lack of docs in tests
  mypy --config-file=tox.ini {posargs:src/}
  pytest --backend={env:NGRAPH_BACKEND} tests -v -k 'not _cuda' --ignore=tests/test_onnx/test_zoo_models.py
  pytest --backend={env:NGRAPH_BACKEND} tests/test_onnx/test_zoo_models.py -v -n 4 -k 'not _cuda' --model_zoo_xfail

[testenv:devenv]
envdir = devenv
usedevelop = True
deps = -rrequirements.txt

[flake8]
inline-quotes = "
max-line-length=110
max-complexity=7
# ignore:
# D100 - Missing docstring in public module
# D104 - Missing docstring in public package
# D105 - Missing docstring in magic method
# D107 - Missing docstring in __init__
# D412 - No blank lines allowed between a section header and its content
# F401 - module imported but unused
# W503 - line break before binary operator (prefer line breaks before op, not after)
ignore=D100,D104,D105,D107,D412,F401,W503

[mypy]
ignore_missing_imports=True
follow_imports=normal
disallow_untyped_defs = True
disallow_untyped_calls = True
check_untyped_defs = True
show_error_context = True
show_column_numbers = True
show_none_errors  = True

# put custom per-file options here in sections that map their names into filenames, e.g. gta_workflow/filename.py is
# [mypy-ngraph/filename]

[mypy-test.*]
disallow_untyped_defs = False

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=100
default_section=FIRSTPARTY
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_third_party=openvino

[pytest]
addopts = --strict-markers
